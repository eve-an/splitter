services:
  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - backend
    depends_on:
      - splitter

  splitter:
    build:
      context: ./splitter    # built from your synced /opt/splitter source
    image: splitter:latest
    restart: unless-stopped
    expose:
      - "8080"
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      - postgres

  postgres:
    image: postgres:18
    restart: unless-stopped
    env_file:
      - .env                 
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  caddy_data:
  caddy_config:
  postgres_data:

networks:
  backend:
    driver: bridge

